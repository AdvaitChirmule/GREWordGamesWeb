@{
    ViewData["Title"] = "My Words";
}

@model WordViewModel

<h1>@ViewData["Title"]</h1>

<p>Use this page to detail your site's privacy policy.</p>

@using (Html.BeginForm("GoToHome", "Home", FormMethod.Post))
{{
    <button class="btn btn-primary" type="submit">Home</button>
}}

@using (Html.BeginForm("GoToLogin", "Home", FormMethod.Post))
{{
    <button class="btn btn-primary" type="submit">Login</button>
}}

@using (Html.BeginForm("GoToRegister", "Home", FormMethod.Post))
{{
    <button class="btn btn-primary" type="submit">Register</button>
}}

@using (Html.BeginForm("AddWordAction", "Home", FormMethod.Post))
{{
    <label for="Name" class="form-label">Add Word</label>
    @Html.TextBoxFor(model => model.AddWord.Word, new { @class = "form-control", @placeholder = "Add A Word" })

    <button class="btn btn-primary" type="submit">Add Word</button>
}}

<div id="notificationBar"></div>

<script>
    var modelOutput = @Html.Raw(Json.Serialize(Model));
    var message = modelOutput.message.notificationMessage;

    var messageBar = document.getElementById("notificationBar")
    messageBar.innerHTML = message;

</script>

<table class="table" id="table">
    <thead>
        <tr>
            <th scope="col"><button class="btn btn-primary" onclick="sortByDateAdded()">Sr No.</button></th>
            <th scope="col"><button class="btn btn-primary" onclick="sortByWord()">Words</button></th>
            <th scope="col"><button class="btn btn-primary" onclick="sortByDateAdded()">Date Added</button></th>
            <th scope="col"><button class="btn btn-primary">Proficiency</button></th>
            <th scope="col">Delete</th>
        </tr>
    </thead>
    <tbody>
        
    </tbody>
</table>

<script type="text/javascript" src="~/js/Scripts/programs.js"></script>

<script>
    var modelOutput = @Html.Raw(Json.Serialize(Model));

    var userMetadataRaw = modelOutput.userMetadata;

    var table = document.getElementById("table")

    var wordIndexes = [[], [], [], []]

    wordIndexes[1] = userMetadataRaw.words.slice(1, (userMetadataRaw.words.length) - 1).split(", ")
    wordIndexes[2] = userMetadataRaw.dateAdded.slice(1, (userMetadataRaw.dateAdded.length) - 1).split(", ")
    wordIndexes[3] = userMetadataRaw.proficiency.slice(1, (userMetadataRaw.proficiency.length) - 1).split(", ")
    wordIndexes[0] = Array.from(Array(wordIndexes[1].length).keys())

    console.log(wordIndexes)

    PopulateTable()

    function RefreshTable() {
        $.ajax({
            url: "/GoToMyWords",
            type: "POST"
        })
    }

    function PopulateTable()
    {
        var table = document.getElementById("table")
        for (let i = 0; i < wordIndexes[0].length; i++) {
            var row = table.insertRow(i + 1);

            var cell0 = row.insertCell(0);
            var cell1 = row.insertCell(1);
            var cell2 = row.insertCell(2);
            var cell3 = row.insertCell(3);
            var cell4 = row.insertCell(4);

            cell0.innerHTML = i + 1
            cell1.innerHTML = wordIndexes[1][i]

            var dateDifferenceMS = Date.now() - Date.parse(wordIndexes[2][i]);
            var dateDifference = new Date(dateDifferenceMS).toISOString();

            differenceString = HowOld(dateDifference);

            cell2.innerHTML = differenceString;

            proficiency = wordIndexes[3][i].slice(1, wordIndexes[3][i].length - 1).split("|")
            if (parseInt(proficiency[1]) == 0) {
                cell3.innerHTML = "0%"
            }
            else {
                cell3.innerHTML = (parseFloat(100 * parseInt(proficiency[0]) / parseInt(proficiency[1])).toFixed(2)).toString() + '%'
            }

            cell4.innerHTML = "<button class='btn btn-primary' onClick='deleteWord(" + i.toString() + ")'>Delete</button>"
        }
    }

    function sortByWord() {
        wordIndexes.sort((x, y) => x[1] - y[1]);
        console.log(wordIndexes)
        PopulateTable();
    }

    function sortByDateAdded() {
        wordIndexes.sort((x, y) => x[0] - y[0]);
        console.log(wordIndexes)
        PopulateTable();
    }

    function deleteWord(id) {

        var messageBar = document.getElementById("notificationBar")
        console.log(id);

        $.ajax({
            url: "/DeleteWord",
            type: "GET",
            data: { id: id }
        }).done(response => {
            if (response.success) {
                messageBar.innerHTML = "Deleted Word";
                window.location.reload(true);6
            }
            else {
                messageBar.innerHTML = "Unexpected Error Occured";
            }
        }).fail(response => {
            messageBar.innerHTML = "Unexpected Error Occured";
        });
    }

</script>